"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@date-fns";
exports.ids = ["vendor-chunks/@date-fns"];
exports.modules = {

/***/ "(ssr)/./node_modules/@date-fns/tz/constants/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@date-fns/tz/constants/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructFromSymbol: () => (/* binding */ constructFromSymbol)\n/* harmony export */ });\n/**\r\n * The symbol to access the `TZDate`'s function to construct a new instance from\r\n * the provided value. It helps date-fns to inherit the time zone.\r\n */\r\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2NvbnN0YW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL2FzaHBoeXMvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2NvbnN0YW50cy9pbmRleC5qcz84MWRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGUgc3ltYm9sIHRvIGFjY2VzcyB0aGUgYFRaRGF0ZWAncyBmdW5jdGlvbiB0byBjb25zdHJ1Y3QgYSBuZXcgaW5zdGFuY2UgZnJvbVxyXG4gKiB0aGUgcHJvdmlkZWQgdmFsdWUuIEl0IGhlbHBzIGRhdGUtZm5zIHRvIGluaGVyaXQgdGhlIHRpbWUgem9uZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBjb25zdHJ1Y3RGcm9tU3ltYm9sID0gU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* binding */ TZDate)\n/* harmony export */ });\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n\r\n\r\nclass TZDate extends _mini_js__WEBPACK_IMPORTED_MODULE_1__.TZDateMini {\r\n  //#region static\r\n\r\n  static tz(tz, ...args) {\r\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region representation\r\n\r\n  toISOString() {\r\n    const [sign, hours, minutes] = this.tzComponents();\r\n    const tz = `${sign}${hours}:${minutes}`;\r\n    return this.internal.toISOString().slice(0, -1) + tz;\r\n  }\r\n  toString() {\r\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\r\n    return `${this.toDateString()} ${this.toTimeString()}`;\r\n  }\r\n  toDateString() {\r\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\r\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\r\n    // \"Tue Aug 13 2024\"\r\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\r\n  }\r\n  toTimeString() {\r\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\r\n    const time = this.internal.toUTCString().split(\" \")[4];\r\n    const [sign, hours, minutes] = this.tzComponents();\r\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\r\n    return `${time} GMT${sign}${hours}${minutes} (${(0,_tzName_index_js__WEBPACK_IMPORTED_MODULE_0__.tzName)(this.timeZone, this)})`;\r\n  }\r\n  toLocaleString(locales, options) {\r\n    return Date.prototype.toLocaleString.call(this, locales, {\r\n      ...options,\r\n      timeZone: options?.timeZone || this.timeZone\r\n    });\r\n  }\r\n  toLocaleDateString(locales, options) {\r\n    return Date.prototype.toLocaleDateString.call(this, locales, {\r\n      ...options,\r\n      timeZone: options?.timeZone || this.timeZone\r\n    });\r\n  }\r\n  toLocaleTimeString(locales, options) {\r\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\r\n      ...options,\r\n      timeZone: options?.timeZone || this.timeZone\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private\r\n\r\n  tzComponents() {\r\n    const offset = this.getTimezoneOffset();\r\n    const sign = offset > 0 ? \"-\" : \"+\";\r\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\r\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\r\n    return [sign, hours, minutes];\r\n  }\r\n\r\n  //#endregion\r\n\r\n  withTimeZone(timeZone) {\r\n    return new TZDate(+this, timeZone);\r\n  }\r\n\r\n  //#region date-fns integration\r\n\r\n  [Symbol.for(\"constructDateFrom\")](date) {\r\n    return new TZDate(+new Date(date), this.timeZone);\r\n  }\r\n\r\n  //#endregion\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2RhdGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0w7QUFDaEMscUJBQXFCLGdEQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixLQUFLLEVBQUUsTUFBTSxHQUFHLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFCQUFxQixFQUFFLG9CQUFvQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvQ0FBb0MsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUs7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxNQUFNLEtBQUssS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEdBQUcsd0RBQU0sc0JBQXNCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXNocGh5cy8uL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovZGF0ZS9pbmRleC5qcz9lY2ZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR6TmFtZSB9IGZyb20gXCIuLi90ek5hbWUvaW5kZXguanNcIjtcclxuaW1wb3J0IHsgVFpEYXRlTWluaSB9IGZyb20gXCIuL21pbmkuanNcIjtcclxuZXhwb3J0IGNsYXNzIFRaRGF0ZSBleHRlbmRzIFRaRGF0ZU1pbmkge1xyXG4gIC8vI3JlZ2lvbiBzdGF0aWNcclxuXHJcbiAgc3RhdGljIHR6KHR6LCAuLi5hcmdzKSB7XHJcbiAgICByZXR1cm4gYXJncy5sZW5ndGggPyBuZXcgVFpEYXRlKC4uLmFyZ3MsIHR6KSA6IG5ldyBUWkRhdGUoRGF0ZS5ub3coKSwgdHopO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiByZXByZXNlbnRhdGlvblxyXG5cclxuICB0b0lTT1N0cmluZygpIHtcclxuICAgIGNvbnN0IFtzaWduLCBob3VycywgbWludXRlc10gPSB0aGlzLnR6Q29tcG9uZW50cygpO1xyXG4gICAgY29uc3QgdHogPSBgJHtzaWdufSR7aG91cnN9OiR7bWludXRlc31gO1xyXG4gICAgcmV0dXJuIHRoaXMuaW50ZXJuYWwudG9JU09TdHJpbmcoKS5zbGljZSgwLCAtMSkgKyB0ejtcclxuICB9XHJcbiAgdG9TdHJpbmcoKSB7XHJcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNCAwNzo1MDoxOSBHTVQrMDgwMCAoU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWUpXCI7XHJcbiAgICByZXR1cm4gYCR7dGhpcy50b0RhdGVTdHJpbmcoKX0gJHt0aGlzLnRvVGltZVN0cmluZygpfWA7XHJcbiAgfVxyXG4gIHRvRGF0ZVN0cmluZygpIHtcclxuICAgIC8vIHRvVVRDU3RyaW5nIHJldHVybnMgUkZDIDcyMzEgKFwiTW9uLCAxMiBBdWcgMjAyNCAyMzozNjowOCBHTVRcIilcclxuICAgIGNvbnN0IFtkYXksIGRhdGUsIG1vbnRoLCB5ZWFyXSA9IHRoaXMuaW50ZXJuYWwudG9VVENTdHJpbmcoKS5zcGxpdChcIiBcIik7XHJcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNFwiXHJcbiAgICByZXR1cm4gYCR7ZGF5Py5zbGljZSgwLCAtMSkgLyogUmVtb3ZlIFwiLFwiICovfSAke21vbnRofSAke2RhdGV9ICR7eWVhcn1gO1xyXG4gIH1cclxuICB0b1RpbWVTdHJpbmcoKSB7XHJcbiAgICAvLyB0b1VUQ1N0cmluZyByZXR1cm5zIFJGQyA3MjMxIChcIk1vbiwgMTIgQXVnIDIwMjQgMjM6MzY6MDggR01UXCIpXHJcbiAgICBjb25zdCB0aW1lID0gdGhpcy5pbnRlcm5hbC50b1VUQ1N0cmluZygpLnNwbGl0KFwiIFwiKVs0XTtcclxuICAgIGNvbnN0IFtzaWduLCBob3VycywgbWludXRlc10gPSB0aGlzLnR6Q29tcG9uZW50cygpO1xyXG4gICAgLy8gXCIwNzo0MjoyMyBHTVQrMDgwMCAoU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWUpXCJcclxuICAgIHJldHVybiBgJHt0aW1lfSBHTVQke3NpZ259JHtob3Vyc30ke21pbnV0ZXN9ICgke3R6TmFtZSh0aGlzLnRpbWVab25lLCB0aGlzKX0pYDtcclxuICB9XHJcbiAgdG9Mb2NhbGVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xyXG4gICAgcmV0dXJuIERhdGUucHJvdG90eXBlLnRvTG9jYWxlU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xyXG4gICAgICAuLi5vcHRpb25zLFxyXG4gICAgICB0aW1lWm9uZTogb3B0aW9ucz8udGltZVpvbmUgfHwgdGhpcy50aW1lWm9uZVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHRvTG9jYWxlRGF0ZVN0cmluZyhsb2NhbGVzLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVEYXRlU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xyXG4gICAgICAuLi5vcHRpb25zLFxyXG4gICAgICB0aW1lWm9uZTogb3B0aW9ucz8udGltZVpvbmUgfHwgdGhpcy50aW1lWm9uZVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHRvTG9jYWxlVGltZVN0cmluZyhsb2NhbGVzLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVUaW1lU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xyXG4gICAgICAuLi5vcHRpb25zLFxyXG4gICAgICB0aW1lWm9uZTogb3B0aW9ucz8udGltZVpvbmUgfHwgdGhpcy50aW1lWm9uZVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIHByaXZhdGVcclxuXHJcbiAgdHpDb21wb25lbnRzKCkge1xyXG4gICAgY29uc3Qgb2Zmc2V0ID0gdGhpcy5nZXRUaW1lem9uZU9mZnNldCgpO1xyXG4gICAgY29uc3Qgc2lnbiA9IG9mZnNldCA+IDAgPyBcIi1cIiA6IFwiK1wiO1xyXG4gICAgY29uc3QgaG91cnMgPSBTdHJpbmcoTWF0aC5mbG9vcihNYXRoLmFicyhvZmZzZXQpIC8gNjApKS5wYWRTdGFydCgyLCBcIjBcIik7XHJcbiAgICBjb25zdCBtaW51dGVzID0gU3RyaW5nKE1hdGguYWJzKG9mZnNldCkgJSA2MCkucGFkU3RhcnQoMiwgXCIwXCIpO1xyXG4gICAgcmV0dXJuIFtzaWduLCBob3VycywgbWludXRlc107XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgd2l0aFRpbWVab25lKHRpbWVab25lKSB7XHJcbiAgICByZXR1cm4gbmV3IFRaRGF0ZSgrdGhpcywgdGltZVpvbmUpO1xyXG4gIH1cclxuXHJcbiAgLy8jcmVnaW9uIGRhdGUtZm5zIGludGVncmF0aW9uXHJcblxyXG4gIFtTeW1ib2wuZm9yKFwiY29uc3RydWN0RGF0ZUZyb21cIildKGRhdGUpIHtcclxuICAgIHJldHVybiBuZXcgVFpEYXRlKCtuZXcgRGF0ZShkYXRlKSwgdGhpcy50aW1lWm9uZSk7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/mini.js":
/*!************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/mini.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDateMini: () => (/* binding */ TZDateMini)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\r\nclass TZDateMini extends Date {\r\n  //#region static\r\n\r\n  constructor(...args) {\r\n    super();\r\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\r\n      this.timeZone = args.pop();\r\n    }\r\n    this.internal = new Date();\r\n    if (isNaN((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this))) {\r\n      this.setTime(NaN);\r\n    } else {\r\n      if (!args.length) {\r\n        this.setTime(Date.now());\r\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\r\n        this.setTime(args[0]);\r\n      } else if (typeof args[0] === \"string\") {\r\n        this.setTime(+new Date(args[0]));\r\n      } else if (args[0] instanceof Date) {\r\n        this.setTime(+args[0]);\r\n      } else {\r\n        this.setTime(+new Date(...args));\r\n        adjustToSystemTZ(this, NaN);\r\n        syncToInternal(this);\r\n      }\r\n    }\r\n  }\r\n  static tz(tz, ...args) {\r\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region time zone\r\n\r\n  withTimeZone(timeZone) {\r\n    return new TZDateMini(+this, timeZone);\r\n  }\r\n  getTimezoneOffset() {\r\n    const offset = -(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this);\r\n    // Remove the seconds offset\r\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\r\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region time\r\n\r\n  setTime(time) {\r\n    Date.prototype.setTime.apply(this, arguments);\r\n    syncToInternal(this);\r\n    return +this;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region date-fns integration\r\n\r\n  [Symbol.for(\"constructDateFrom\")](date) {\r\n    return new TZDateMini(+new Date(date), this.timeZone);\r\n  }\r\n\r\n  //#endregion\r\n}\r\n\r\n// Assign getters and setters\r\nconst re = /^(get|set)(?!UTC)/;\r\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\r\n  if (!re.test(method)) return;\r\n  const utcMethod = method.replace(re, \"$1UTC\");\r\n  // Filter out methods without UTC counterparts\r\n  if (!TZDateMini.prototype[utcMethod]) return;\r\n  if (method.startsWith(\"get\")) {\r\n    // Delegate to internal date's UTC method\r\n    TZDateMini.prototype[method] = function () {\r\n      return this.internal[utcMethod]();\r\n    };\r\n  } else {\r\n    // Assign regular setter\r\n    TZDateMini.prototype[method] = function () {\r\n      Date.prototype[utcMethod].apply(this.internal, arguments);\r\n      syncFromInternal(this);\r\n      return +this;\r\n    };\r\n\r\n    // Assign UTC setter\r\n    TZDateMini.prototype[utcMethod] = function () {\r\n      Date.prototype[utcMethod].apply(this, arguments);\r\n      syncToInternal(this);\r\n      return +this;\r\n    };\r\n  }\r\n});\r\n\r\n/**\r\n * Function syncs time to internal date, applying the time zone offset.\r\n *\r\n * @param {Date} date - Date to sync\r\n */\r\nfunction syncToInternal(date) {\r\n  date.internal.setTime(+date);\r\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60));\r\n}\r\n\r\n/**\r\n * Function syncs the internal date UTC values to the date. It allows to get\r\n * accurate timestamp value.\r\n *\r\n * @param {Date} date - The date to sync\r\n */\r\nfunction syncFromInternal(date) {\r\n  // First we transpose the internal values\r\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\r\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\r\n\r\n  // Now we have to adjust the date to the system time zone\r\n  adjustToSystemTZ(date);\r\n}\r\n\r\n/**\r\n * Function adjusts the date to the system time zone. It uses the time zone\r\n * differences to calculate the offset and adjust the date.\r\n *\r\n * @param {Date} date - Date to adjust\r\n */\r\nfunction adjustToSystemTZ(date) {\r\n  // Save the time zone offset before all the adjustments\r\n  const baseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\r\n  // Remove the seconds offset\r\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\r\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\r\n  //#region System DST adjustment\r\n\r\n  // The biggest problem with using the system time zone is that when we create\r\n  // a date from internal values stored in UTC, the system time zone might end\r\n  // up on the DST hour:\r\n  //\r\n  //   $ TZ=America/New_York node\r\n  //   > new Date(2020, 2, 8, 1).toString()\r\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\r\n  //   > new Date(2020, 2, 8, 2).toString()\r\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\r\n  //   > new Date(2020, 2, 8, 3).toString()\r\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\r\n  //   > new Date(2020, 2, 8, 4).toString()\r\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\r\n  //\r\n  // Here we get the same hour for both 2 and 3, because the system time zone\r\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\r\n  // to adjust the internal date to reflect that.\r\n  //\r\n  // However we want to adjust only if that's the DST hour the change happenes,\r\n  // not the hour where DST moves to.\r\n\r\n  // We calculate the previous hour to see if the time zone offset has changed\r\n  // and we have landed on the DST hour.\r\n  const prevHour = new Date(+date);\r\n  // We use UTC methods here as we don't want to land on the same hour again\r\n  // in case of DST.\r\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\r\n\r\n  // Calculate if we are on the system DST hour.\r\n  const systemOffset = -new Date(+date).getTimezoneOffset();\r\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\r\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\r\n  // Detect the DST shift. System DST change will occur both on\r\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\r\n\r\n  // Move the internal date when we are on the system DST hour.\r\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\r\n\r\n  //#endregion\r\n\r\n  //#region System diff adjustment\r\n\r\n  // Now we need to adjust the date, since we just applied internal values.\r\n  // We need to calculate the difference between the system and date time zones\r\n  // and apply it to the date.\r\n\r\n  const offsetDiff = systemOffset - offset;\r\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\r\n\r\n  //#endregion\r\n\r\n  //#region Seconds System diff adjustment\r\n\r\n  const systemDate = new Date(+date);\r\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\r\n  systemDate.setUTCSeconds(0);\r\n  // For negative systemOffset, invert the seconds.\r\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\r\n\r\n  // Calculate the seconds offset based on the timezone offset.\r\n  const secondsOffset = Math.round(-((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60)) % 60;\r\n  if (secondsOffset || systemSecondsOffset) {\r\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\r\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post-adjustment DST fix\r\n\r\n  const postBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\r\n  // Remove the seconds offset\r\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\r\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\r\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\r\n  const postOffsetDiff = postSystemOffset - postOffset;\r\n  const offsetChanged = postOffset !== offset;\r\n  const postDiff = postOffsetDiff - offsetDiff;\r\n  if (offsetChanged && postDiff) {\r\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\r\n\r\n    // Now we need to check if got offset change during the post-adjustment.\r\n    // If so, we also need both dates to reflect that.\r\n\r\n    const newBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\r\n    // Remove the seconds offset\r\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\r\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\r\n    const offsetChange = postOffset - newOffset;\r\n    if (offsetChange) {\r\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\r\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/mini.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/index.js":
/*!********************************************!*\
  !*** ./node_modules/@date-fns/tz/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* reexport safe */ _date_index_js__WEBPACK_IMPORTED_MODULE_1__.TZDate),\n/* harmony export */   TZDateMini: () => (/* reexport safe */ _date_mini_js__WEBPACK_IMPORTED_MODULE_2__.TZDateMini),\n/* harmony export */   constructFromSymbol: () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol),\n/* harmony export */   tz: () => (/* reexport safe */ _tz_index_js__WEBPACK_IMPORTED_MODULE_3__.tz),\n/* harmony export */   tzName: () => (/* reexport safe */ _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__.tzName),\n/* harmony export */   tzOffset: () => (/* reexport safe */ _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__.tzOffset),\n/* harmony export */   tzScan: () => (/* reexport safe */ _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__.tzScan)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"(ssr)/./node_modules/@date-fns/tz/constants/index.js\");\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n/* harmony import */ var _date_mini_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date/mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n/* harmony import */ var _tz_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tz/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tz/index.js\");\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n/* harmony import */ var _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tzScan/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\");\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ0w7QUFDRDtBQUNEO0FBQ007QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2FzaHBoeXMvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2luZGV4LmpzPzMzN2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzL2luZGV4LmpzXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUvaW5kZXguanNcIjtcclxuZXhwb3J0ICogZnJvbSBcIi4vZGF0ZS9taW5pLmpzXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL3R6L2luZGV4LmpzXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL3R6T2Zmc2V0L2luZGV4LmpzXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL3R6U2Nhbi9pbmRleC5qc1wiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi90ek5hbWUvaW5kZXguanNcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzName/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzName/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzName: () => (/* binding */ tzName)\n/* harmony export */ });\n/**\r\n * Time zone name format.\r\n */\r\n\r\n/**\r\n * The function returns the time zone name for the given date in the specified\r\n * time zone.\r\n *\r\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\r\n * name in a long format, e.g. \"Pacific Standard Time\" or\r\n * \"Singapore Standard Time\".\r\n *\r\n * It is possible to specify the format as the third argument using one of the following options\r\n *\r\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\r\n * - \"long\": e.g. \"Eastern Daylight Time\".\r\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\r\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\r\n *\r\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\r\n *\r\n * @param timeZone - Time zone name (IANA or UTC offset)\r\n * @param date - Date object to get the time zone name for\r\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\r\n *\r\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\r\n */\r\nfunction tzName(timeZone, date, format = \"long\") {\r\n  return new Intl.DateTimeFormat(\"en-US\", {\r\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\r\n    hour: \"numeric\",\r\n    timeZone: timeZone,\r\n    timeZoneName: format\r\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\r\n  .slice(2) // Skip the hour and AM/PM parts\r\n  .join(\" \");\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FzaHBoeXMvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcz82MDVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaW1lIHpvbmUgbmFtZSBmb3JtYXQuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFRoZSBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lIHpvbmUgbmFtZSBmb3IgdGhlIGdpdmVuIGRhdGUgaW4gdGhlIHNwZWNpZmllZFxyXG4gKiB0aW1lIHpvbmUuXHJcbiAqXHJcbiAqIEl0IHVzZXMgdGhlIGBJbnRsLkRhdGVUaW1lRm9ybWF0YCBBUEkgYW5kIGJ5IGRlZmF1bHQgb3V0cHV0cyB0aGUgdGltZSB6b25lXHJcbiAqIG5hbWUgaW4gYSBsb25nIGZvcm1hdCwgZS5nLiBcIlBhY2lmaWMgU3RhbmRhcmQgVGltZVwiIG9yXHJcbiAqIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIi5cclxuICpcclxuICogSXQgaXMgcG9zc2libGUgdG8gc3BlY2lmeSB0aGUgZm9ybWF0IGFzIHRoZSB0aGlyZCBhcmd1bWVudCB1c2luZyBvbmUgb2YgdGhlIGZvbGxvd2luZyBvcHRpb25zXHJcbiAqXHJcbiAqIC0gXCJzaG9ydFwiOiBlLmcuIFwiRURUXCIgb3IgXCJHTVQrOFwiLlxyXG4gKiAtIFwibG9uZ1wiOiBlLmcuIFwiRWFzdGVybiBEYXlsaWdodCBUaW1lXCIuXHJcbiAqIC0gXCJzaG9ydEdlbmVyaWNcIjogZS5nLiBcIkVUXCIgb3IgXCJTaW5nYXBvcmUgVGltZVwiLlxyXG4gKiAtIFwibG9uZ0dlbmVyaWNcIjogZS5nLiBcIkVhc3Rlcm4gVGltZVwiIG9yIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIi5cclxuICpcclxuICogVGhlc2Ugb3B0aW9ucyBjb3JyZXNwb25kIHRvIFRSMzUgdG9rZW5zIGB6Li56enpgLCBgenp6emAsIGB2YCwgYW5kIGB2dnZ2YCByZXNwZWN0aXZlbHk6IGh0dHBzOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LWRhdGVzLmh0bWwjZGZzdC16b25lXHJcbiAqXHJcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXHJcbiAqIEBwYXJhbSBkYXRlIC0gRGF0ZSBvYmplY3QgdG8gZ2V0IHRoZSB0aW1lIHpvbmUgbmFtZSBmb3JcclxuICogQHBhcmFtIGZvcm1hdCAtIE9wdGlvbmFsIGZvcm1hdCBvZiB0aGUgdGltZSB6b25lIG5hbWUuIERlZmF1bHRzIHRvIFwibG9uZ1wiLiBDYW4gYmUgXCJzaG9ydFwiLCBcImxvbmdcIiwgXCJzaG9ydEdlbmVyaWNcIiwgb3IgXCJsb25nR2VuZXJpY1wiLlxyXG4gKlxyXG4gKiBAcmV0dXJucyBUaW1lIHpvbmUgbmFtZSAoZS5nLiBcIlNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lXCIpXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdHpOYW1lKHRpbWVab25lLCBkYXRlLCBmb3JtYXQgPSBcImxvbmdcIikge1xyXG4gIHJldHVybiBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChcImVuLVVTXCIsIHtcclxuICAgIC8vIEVuZm9yY2VzIGVuZ2luZSB0byByZW5kZXIgdGhlIHRpbWUuIFdpdGhvdXQgdGhlIG9wdGlvbiBKYXZhU2NyaXB0Q29yZSBvbWl0cyBpdC5cclxuICAgIGhvdXI6IFwibnVtZXJpY1wiLFxyXG4gICAgdGltZVpvbmU6IHRpbWVab25lLFxyXG4gICAgdGltZVpvbmVOYW1lOiBmb3JtYXRcclxuICB9KS5mb3JtYXQoZGF0ZSkuc3BsaXQoL1xccy9nKSAvLyBGb3JtYXQuSlMgdXNlcyBub24tYnJlYWtpbmcgc3BhY2VzXHJcbiAgLnNsaWNlKDIpIC8vIFNraXAgdGhlIGhvdXIgYW5kIEFNL1BNIHBhcnRzXHJcbiAgLmpvaW4oXCIgXCIpO1xyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzName/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzOffset/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzOffset: () => (/* binding */ tzOffset)\n/* harmony export */ });\nconst offsetFormatCache = {};\r\nconst offsetCache = {};\r\n\r\n/**\r\n * The function extracts UTC offset in minutes from the given date in specified\r\n * time zone.\r\n *\r\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\r\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\r\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\r\n *\r\n * @param timeZone - Time zone name (IANA or UTC offset)\r\n * @param date - Date to check the offset for\r\n *\r\n * @returns UTC offset in minutes\r\n */\r\nfunction tzOffset(timeZone, date) {\r\n  try {\r\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\r\n      timeZone,\r\n      timeZoneName: \"longOffset\"\r\n    }).format;\r\n    const offsetStr = format(date).split(\"GMT\")[1];\r\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\r\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\r\n  } catch {\r\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\r\n    // See: https://github.com/nodejs/node/issues/53419\r\n    if (timeZone in offsetCache) return offsetCache[timeZone];\r\n    const captures = timeZone?.match(offsetRe);\r\n    if (captures) return calcOffset(timeZone, captures.slice(1));\r\n    return NaN;\r\n  }\r\n}\r\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\r\nfunction calcOffset(cacheStr, values) {\r\n  const hours = +(values[0] || 0);\r\n  const minutes = +(values[1] || 0);\r\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\r\n  const seconds = +(values[2] || 0) / 60;\r\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6T2Zmc2V0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXNocGh5cy8uL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHpPZmZzZXQvaW5kZXguanM/MDQ0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvZmZzZXRGb3JtYXRDYWNoZSA9IHt9O1xyXG5jb25zdCBvZmZzZXRDYWNoZSA9IHt9O1xyXG5cclxuLyoqXHJcbiAqIFRoZSBmdW5jdGlvbiBleHRyYWN0cyBVVEMgb2Zmc2V0IGluIG1pbnV0ZXMgZnJvbSB0aGUgZ2l2ZW4gZGF0ZSBpbiBzcGVjaWZpZWRcclxuICogdGltZSB6b25lLlxyXG4gKlxyXG4gKiBVbmxpa2UgYERhdGUucHJvdG90eXBlLmdldFRpbWV6b25lT2Zmc2V0YCwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB2YWx1ZVxyXG4gKiBtaXJyb3JlZCB0byB0aGUgc2lnbiBvZiB0aGUgb2Zmc2V0IGluIHRoZSB0aW1lIHpvbmUuIEZvciBBc2lhL1NpbmdhcG9yZVxyXG4gKiAoVVRDKzgpLCBgdHpPZmZzZXRgIHJldHVybnMgNDgwLCB3aGlsZSBgZ2V0VGltZXpvbmVPZmZzZXRgIHJldHVybnMgLTQ4MC5cclxuICpcclxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcclxuICogQHBhcmFtIGRhdGUgLSBEYXRlIHRvIGNoZWNrIHRoZSBvZmZzZXQgZm9yXHJcbiAqXHJcbiAqIEByZXR1cm5zIFVUQyBvZmZzZXQgaW4gbWludXRlc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHR6T2Zmc2V0KHRpbWVab25lLCBkYXRlKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGZvcm1hdCA9IG9mZnNldEZvcm1hdENhY2hlW3RpbWVab25lXSB8fD0gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoXCJlbi1VU1wiLCB7XHJcbiAgICAgIHRpbWVab25lLFxyXG4gICAgICB0aW1lWm9uZU5hbWU6IFwibG9uZ09mZnNldFwiXHJcbiAgICB9KS5mb3JtYXQ7XHJcbiAgICBjb25zdCBvZmZzZXRTdHIgPSBmb3JtYXQoZGF0ZSkuc3BsaXQoXCJHTVRcIilbMV07XHJcbiAgICBpZiAob2Zmc2V0U3RyIGluIG9mZnNldENhY2hlKSByZXR1cm4gb2Zmc2V0Q2FjaGVbb2Zmc2V0U3RyXTtcclxuICAgIHJldHVybiBjYWxjT2Zmc2V0KG9mZnNldFN0ciwgb2Zmc2V0U3RyLnNwbGl0KFwiOlwiKSk7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICAvLyBGYWxsYmFjayB0byBtYW51YWwgcGFyc2luZyBpZiB0aGUgcnVudGltZSBkb2Vzbid0IHN1cHBvcnQgwrFISDpNTS/CsUhITU0vwrFISFxyXG4gICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzUzNDE5XHJcbiAgICBpZiAodGltZVpvbmUgaW4gb2Zmc2V0Q2FjaGUpIHJldHVybiBvZmZzZXRDYWNoZVt0aW1lWm9uZV07XHJcbiAgICBjb25zdCBjYXB0dXJlcyA9IHRpbWVab25lPy5tYXRjaChvZmZzZXRSZSk7XHJcbiAgICBpZiAoY2FwdHVyZXMpIHJldHVybiBjYWxjT2Zmc2V0KHRpbWVab25lLCBjYXB0dXJlcy5zbGljZSgxKSk7XHJcbiAgICByZXR1cm4gTmFOO1xyXG4gIH1cclxufVxyXG5jb25zdCBvZmZzZXRSZSA9IC8oWystXVxcZFxcZCk6PyhcXGRcXGQpPy87XHJcbmZ1bmN0aW9uIGNhbGNPZmZzZXQoY2FjaGVTdHIsIHZhbHVlcykge1xyXG4gIGNvbnN0IGhvdXJzID0gKyh2YWx1ZXNbMF0gfHwgMCk7XHJcbiAgY29uc3QgbWludXRlcyA9ICsodmFsdWVzWzFdIHx8IDApO1xyXG4gIC8vIENvbnZlcnQgc2Vjb25kcyB0byBtaW51dGVzIGJ5IGRpdmlkaW5nIGJ5IDYwIHRvIGtlZXAgdGhlIGZ1bmN0aW9uIHJldHVybiBpbiBtaW51dGVzLlxyXG4gIGNvbnN0IHNlY29uZHMgPSArKHZhbHVlc1syXSB8fCAwKSAvIDYwO1xyXG4gIHJldHVybiBvZmZzZXRDYWNoZVtjYWNoZVN0cl0gPSBob3VycyAqIDYwICsgbWludXRlcyA+IDAgPyBob3VycyAqIDYwICsgbWludXRlcyArIHNlY29uZHMgOiBob3VycyAqIDYwIC0gbWludXRlcyAtIHNlY29uZHM7XHJcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzScan/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzScan/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzScan: () => (/* binding */ tzScan)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\r\n\r\n/**\r\n * Time interval.\r\n */\r\n\r\n/**\r\n * Time zone change record.\r\n */\r\n\r\n/**\r\n * The function scans the time zone for changes in the given interval.\r\n *\r\n * @param timeZone - Time zone name (IANA or UTC offset)\r\n * @param interval - Time interval to scan for changes\r\n *\r\n * @returns Array of time zone changes\r\n */\r\nfunction tzScan(timeZone, interval) {\r\n  const changes = [];\r\n  const monthDate = new Date(interval.start);\r\n  monthDate.setUTCSeconds(0, 0);\r\n  const endDate = new Date(interval.end);\r\n  endDate.setUTCSeconds(0, 0);\r\n  const endMonthTime = +endDate;\r\n  let lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\r\n  while (+monthDate < endMonthTime) {\r\n    // Month forward\r\n    monthDate.setUTCMonth(monthDate.getUTCMonth() + 1);\r\n\r\n    // Find the month where the offset changes\r\n    const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\r\n    if (offset != lastOffset) {\r\n      // Rewind a month back to find the day where the offset changes\r\n      const dayDate = new Date(monthDate);\r\n      dayDate.setUTCMonth(dayDate.getUTCMonth() - 1);\r\n      const endDayTime = +monthDate;\r\n      lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\r\n      while (+dayDate < endDayTime) {\r\n        // Day forward\r\n        dayDate.setUTCDate(dayDate.getUTCDate() + 1);\r\n\r\n        // Find the day where the offset changes\r\n        const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\r\n        if (offset != lastOffset) {\r\n          // Rewind a day back to find the time where the offset changes\r\n          const hourDate = new Date(dayDate);\r\n          hourDate.setUTCDate(hourDate.getUTCDate() - 1);\r\n          const endHourTime = +dayDate;\r\n          lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\r\n          while (+hourDate < endHourTime) {\r\n            // Hour forward\r\n            hourDate.setUTCHours(hourDate.getUTCHours() + 1);\r\n\r\n            // Find the hour where the offset changes\r\n            const hourOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\r\n            if (hourOffset !== lastOffset) {\r\n              changes.push({\r\n                date: new Date(hourDate),\r\n                change: hourOffset - lastOffset,\r\n                offset: hourOffset\r\n              });\r\n            }\r\n            lastOffset = hourOffset;\r\n          }\r\n        }\r\n        lastOffset = offset;\r\n      }\r\n    }\r\n    lastOffset = offset;\r\n  }\r\n  return changes;\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6U2Nhbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw0REFBUTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNERBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw0REFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FzaHBoeXMvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6U2Nhbi9pbmRleC5qcz9iZDlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR6T2Zmc2V0IH0gZnJvbSBcIi4uL3R6T2Zmc2V0L2luZGV4LmpzXCI7XHJcblxyXG4vKipcclxuICogVGltZSBpbnRlcnZhbC5cclxuICovXHJcblxyXG4vKipcclxuICogVGltZSB6b25lIGNoYW5nZSByZWNvcmQuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFRoZSBmdW5jdGlvbiBzY2FucyB0aGUgdGltZSB6b25lIGZvciBjaGFuZ2VzIGluIHRoZSBnaXZlbiBpbnRlcnZhbC5cclxuICpcclxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcclxuICogQHBhcmFtIGludGVydmFsIC0gVGltZSBpbnRlcnZhbCB0byBzY2FuIGZvciBjaGFuZ2VzXHJcbiAqXHJcbiAqIEByZXR1cm5zIEFycmF5IG9mIHRpbWUgem9uZSBjaGFuZ2VzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdHpTY2FuKHRpbWVab25lLCBpbnRlcnZhbCkge1xyXG4gIGNvbnN0IGNoYW5nZXMgPSBbXTtcclxuICBjb25zdCBtb250aERhdGUgPSBuZXcgRGF0ZShpbnRlcnZhbC5zdGFydCk7XHJcbiAgbW9udGhEYXRlLnNldFVUQ1NlY29uZHMoMCwgMCk7XHJcbiAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKGludGVydmFsLmVuZCk7XHJcbiAgZW5kRGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xyXG4gIGNvbnN0IGVuZE1vbnRoVGltZSA9ICtlbmREYXRlO1xyXG4gIGxldCBsYXN0T2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XHJcbiAgd2hpbGUgKCttb250aERhdGUgPCBlbmRNb250aFRpbWUpIHtcclxuICAgIC8vIE1vbnRoIGZvcndhcmRcclxuICAgIG1vbnRoRGF0ZS5zZXRVVENNb250aChtb250aERhdGUuZ2V0VVRDTW9udGgoKSArIDEpO1xyXG5cclxuICAgIC8vIEZpbmQgdGhlIG1vbnRoIHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xyXG4gICAgY29uc3Qgb2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XHJcbiAgICBpZiAob2Zmc2V0ICE9IGxhc3RPZmZzZXQpIHtcclxuICAgICAgLy8gUmV3aW5kIGEgbW9udGggYmFjayB0byBmaW5kIHRoZSBkYXkgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXHJcbiAgICAgIGNvbnN0IGRheURhdGUgPSBuZXcgRGF0ZShtb250aERhdGUpO1xyXG4gICAgICBkYXlEYXRlLnNldFVUQ01vbnRoKGRheURhdGUuZ2V0VVRDTW9udGgoKSAtIDEpO1xyXG4gICAgICBjb25zdCBlbmREYXlUaW1lID0gK21vbnRoRGF0ZTtcclxuICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBkYXlEYXRlKTtcclxuICAgICAgd2hpbGUgKCtkYXlEYXRlIDwgZW5kRGF5VGltZSkge1xyXG4gICAgICAgIC8vIERheSBmb3J3YXJkXHJcbiAgICAgICAgZGF5RGF0ZS5zZXRVVENEYXRlKGRheURhdGUuZ2V0VVRDRGF0ZSgpICsgMSk7XHJcblxyXG4gICAgICAgIC8vIEZpbmQgdGhlIGRheSB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcclxuICAgICAgICBjb25zdCBvZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgZGF5RGF0ZSk7XHJcbiAgICAgICAgaWYgKG9mZnNldCAhPSBsYXN0T2Zmc2V0KSB7XHJcbiAgICAgICAgICAvLyBSZXdpbmQgYSBkYXkgYmFjayB0byBmaW5kIHRoZSB0aW1lIHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xyXG4gICAgICAgICAgY29uc3QgaG91ckRhdGUgPSBuZXcgRGF0ZShkYXlEYXRlKTtcclxuICAgICAgICAgIGhvdXJEYXRlLnNldFVUQ0RhdGUoaG91ckRhdGUuZ2V0VVRDRGF0ZSgpIC0gMSk7XHJcbiAgICAgICAgICBjb25zdCBlbmRIb3VyVGltZSA9ICtkYXlEYXRlO1xyXG4gICAgICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBob3VyRGF0ZSk7XHJcbiAgICAgICAgICB3aGlsZSAoK2hvdXJEYXRlIDwgZW5kSG91clRpbWUpIHtcclxuICAgICAgICAgICAgLy8gSG91ciBmb3J3YXJkXHJcbiAgICAgICAgICAgIGhvdXJEYXRlLnNldFVUQ0hvdXJzKGhvdXJEYXRlLmdldFVUQ0hvdXJzKCkgKyAxKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEZpbmQgdGhlIGhvdXIgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXHJcbiAgICAgICAgICAgIGNvbnN0IGhvdXJPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgaG91ckRhdGUpO1xyXG4gICAgICAgICAgICBpZiAoaG91ck9mZnNldCAhPT0gbGFzdE9mZnNldCkge1xyXG4gICAgICAgICAgICAgIGNoYW5nZXMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShob3VyRGF0ZSksXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2U6IGhvdXJPZmZzZXQgLSBsYXN0T2Zmc2V0LFxyXG4gICAgICAgICAgICAgICAgb2Zmc2V0OiBob3VyT2Zmc2V0XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGFzdE9mZnNldCA9IGhvdXJPZmZzZXQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxhc3RPZmZzZXQgPSBvZmZzZXQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGxhc3RPZmZzZXQgPSBvZmZzZXQ7XHJcbiAgfVxyXG4gIHJldHVybiBjaGFuZ2VzO1xyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tz/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@date-fns/tz/tz/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tz: () => (/* binding */ tz)\n/* harmony export */ });\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n\r\n\r\n/**\r\n * The function creates accepts a time zone and returns a function that creates\r\n * a new `TZDate` instance in the time zone from the provided value. Use it to\r\n * provide the context for the date-fns functions, via the `in` option.\r\n *\r\n * @param timeZone - Time zone name (IANA or UTC offset)\r\n *\r\n * @returns Function that creates a new `TZDate` instance in the time zone\r\n */\r\nconst tz = timeZone => value => _date_index_js__WEBPACK_IMPORTED_MODULE_0__.TZDate.tz(timeZone, +new Date(value));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGtEQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXNocGh5cy8uL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHovaW5kZXguanM/ZWQ5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUWkRhdGUgfSBmcm9tIFwiLi4vZGF0ZS9pbmRleC5qc1wiO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBmdW5jdGlvbiBjcmVhdGVzIGFjY2VwdHMgYSB0aW1lIHpvbmUgYW5kIHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXNcclxuICogYSBuZXcgYFRaRGF0ZWAgaW5zdGFuY2UgaW4gdGhlIHRpbWUgem9uZSBmcm9tIHRoZSBwcm92aWRlZCB2YWx1ZS4gVXNlIGl0IHRvXHJcbiAqIHByb3ZpZGUgdGhlIGNvbnRleHQgZm9yIHRoZSBkYXRlLWZucyBmdW5jdGlvbnMsIHZpYSB0aGUgYGluYCBvcHRpb24uXHJcbiAqXHJcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXHJcbiAqXHJcbiAqIEByZXR1cm5zIEZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhIG5ldyBgVFpEYXRlYCBpbnN0YW5jZSBpbiB0aGUgdGltZSB6b25lXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgdHogPSB0aW1lWm9uZSA9PiB2YWx1ZSA9PiBUWkRhdGUudHoodGltZVpvbmUsICtuZXcgRGF0ZSh2YWx1ZSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tz/index.js\n");

/***/ })

};
;